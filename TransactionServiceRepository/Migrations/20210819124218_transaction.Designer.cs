// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransactionServiceRepository.Models;

namespace TransactionServiceRepository.Migrations
{
    [DbContext(typeof(TransactionDBContext))]
    [Migration("20210819124218_transaction")]
    partial class transaction
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TransactionServiceRepository.Models.FinancialTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountOfTransaction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CounterPartyId")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfTransaction")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethodCode")
                        .HasColumnType("int");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransactionTypeCode")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("PaymentMethodCode");

                    b.HasIndex("TransactionTypeCode");

                    b.ToTable("FinancialTransaction");
                });

            modelBuilder.Entity("TransactionServiceRepository.Models.PaymentMethod", b =>
                {
                    b.Property<int>("PaymentMethodCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PaymentMethodName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentMethodCode");

                    b.ToTable("PaymentMethod");

                    b.HasData(
                        new
                        {
                            PaymentMethodCode = 300,
                            PaymentMethodName = "Amex"
                        },
                        new
                        {
                            PaymentMethodCode = 301,
                            PaymentMethodName = "Bank Transfer"
                        },
                        new
                        {
                            PaymentMethodCode = 302,
                            PaymentMethodName = "Cash"
                        },
                        new
                        {
                            PaymentMethodCode = 303,
                            PaymentMethodName = "Diners Club"
                        },
                        new
                        {
                            PaymentMethodCode = 304,
                            PaymentMethodName = "Master Card"
                        },
                        new
                        {
                            PaymentMethodCode = 305,
                            PaymentMethodName = "Visa"
                        });
                });

            modelBuilder.Entity("TransactionServiceRepository.Models.TransactionType", b =>
                {
                    b.Property<int>("TransactionTypeCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransactionTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransactionTypeCode");

                    b.ToTable("TransactionType");

                    b.HasData(
                        new
                        {
                            TransactionTypeCode = 4000,
                            TransactionTypeDescription = "Adjustment"
                        },
                        new
                        {
                            TransactionTypeCode = 4001,
                            TransactionTypeDescription = "Payment"
                        },
                        new
                        {
                            TransactionTypeCode = 4002,
                            TransactionTypeDescription = "Refund"
                        },
                        new
                        {
                            TransactionTypeCode = 4003,
                            TransactionTypeDescription = "Self"
                        });
                });

            modelBuilder.Entity("TransactionServiceRepository.Models.FinancialTransaction", b =>
                {
                    b.HasOne("TransactionServiceRepository.Models.PaymentMethod", "PaymentMethod")
                        .WithMany()
                        .HasForeignKey("PaymentMethodCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransactionServiceRepository.Models.TransactionType", "TransactionType")
                        .WithMany()
                        .HasForeignKey("TransactionTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMethod");

                    b.Navigation("TransactionType");
                });
#pragma warning restore 612, 618
        }
    }
}
